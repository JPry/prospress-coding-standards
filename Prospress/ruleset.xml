<?xml version="1.0"?>
<ruleset name="Prospress">
	<description>Prospress Coding Standards</description>

	<!-- http://make.wordpress.org/core/handbook/coding-standards/php/#brace-style -->
	<rule ref="Generic.ControlStructures.InlineControlStructure" />
	<rule ref="Squiz.ControlStructures.ControlSignature" />
	<rule ref="Squiz.ControlStructures.ControlSignature.NewlineAfterOpenBrace">
		<severity>0</severity>
	</rule>

	<!-- http://make.wordpress.org/core/handbook/coding-standards/php/#remove-trailing-spaces -->
	<rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>

	<!-- http://make.wordpress.org/core/handbook/coding-standards/php/#no-shorthand-php-tags -->
	<rule ref="Generic.PHP.DisallowShortOpenTag"/>

	<!-- important to prevent issues with content being sent before headers -->
	<rule ref="Generic.Files.ByteOrderMark"/>

	<!-- http://make.wordpress.org/core/handbook/coding-standards/php/#naming-conventions -->
	<rule ref="Generic.PHP.LowerCaseConstant"/>

	<!-- http://make.wordpress.org/core/handbook/coding-standards/php/#indentation -->
	<arg name="tab-width" value="4"/>
	<rule ref="Generic.WhiteSpace.DisallowSpaceIndent"/>
	<rule ref="Generic.WhiteSpace.ScopeIndent">
		<properties>
			<property name="indent" value="4"/>
			<property name="tabIndent" value="true"/>
			<property name="ignoreIndentationTokens" type="array" value="T_COMMENT"/>
		</properties>
	</rule>

	<!-- http://make.wordpress.org/core/handbook/coding-standards/php/#error-control-operator -->
	<rule ref="Generic.PHP.NoSilencedErrors" />

	<rule ref="Squiz.Strings.DoubleQuoteUsage"/>
	<rule ref="Squiz.Strings.DoubleQuoteUsage.ContainsVar">
		<severity>0</severity>
	</rule>
	
	<!-- Added for lowercase "as" keyword check -->
	<rule ref="Squiz.ControlStructures.ForEachLoopDeclaration">
		<properties>
			<property name="requiredSpacesAfterOpen" value="1"/>
			<property name="requiredSpacesBeforeClose" value="1"/>
		</properties>
	</rule>

	<rule ref="Generic.Files.LineEndings">
		<properties>
			<property name="eolChar" value="\n"/>
		</properties>
	</rule>

	<rule ref="PEAR.Functions.FunctionCallSignature">
		<properties>
			<property name="requiredSpacesAfterOpen" value="1" />
			<property name="requiredSpacesBeforeClose" value="1" />
		</properties>
	</rule>
	<rule ref="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket">
		<severity>0</severity>
	</rule>
	<rule ref="PEAR.Functions.FunctionCallSignature.CloseBracketLine">
		<severity>0</severity>
	</rule>

	<rule ref="WordPress.Arrays.ArrayDeclaration"/>
	<rule ref="WordPress.Arrays.ArrayKeySpacingRestrictions"/>
	<rule ref="WordPress.Classes.ValidClassName"/>
	<rule ref="WordPress.Files.FileName"/>
	<rule ref="WordPress.Functions.FunctionDeclarationArgumentSpacing"/>
	<rule ref="WordPress.NamingConventions.ValidFunctionName"/>
	<rule ref="WordPress.WhiteSpace.ControlStructureSpacing"/>
	<rule ref="WordPress.WhiteSpace.OperatorSpacing"/>
	<rule ref="WordPress.WhiteSpace.CastStructureSpacing"/>
	<rule ref="WordPress.PHP.YodaConditions"/>

	<rule ref="WordPress.XSS.EscapeOutput">
		<properties>
			<!-- e.g. body_class, the_content, the_excerpt -->
			<property name="customAutoEscapedFunctions" type="array" value="make_clickable,woocommerce_wp_select"/>
			<!-- e.g. esc_attr, esc_html, esc_url-->
			<property name="customSanitizingFunctions" type="array" value=""/>
			<!-- e.g. _deprecated_argument, printf, _e-->
			<property name="customPrintingFunctions" type="array" value=""/>
		</properties>
	</rule>

	<rule ref="WordPress.CSRF.NonceVerification" />
	<rule ref="WordPress.PHP.DiscouragedFunctions"/>
	<rule ref="WordPress.WP.EnqueuedResources"/>
	<rule ref="WordPress.Variables.GlobalVariables"/>

</ruleset>
